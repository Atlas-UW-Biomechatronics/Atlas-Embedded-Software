 =============================== SPI DEVICES ================================
 ~ Raspberry Pi uses spi-bcm2708 SPI driver which comes with 2 predefined
   chip select pins (?) ... Allegedly the newest version of the driver
   allows any GPIO pin to be used as a Chip Select
 ~ In the filesystem, each connected SPI Device can be found at /dev/spidev0.x
   (x == SPI Device number, starting from 0) ... These correspond to the
   slave select pins
 ~ /dev/spidev0.x files are known as Character Devices, special files that
   provide access to a hardware device

 ============================= FILE DESCRIPTOR ==============================
 ~ Unix Systems use file descriptors (fd) to access files and input/output
   devices, such as SPI devices
 ~ File descriptors are non-negative integers which map to a unique combination
   of a file and a set of permissions.

 ============================ ESSENTIAL METHODS =============================
 ~ open(const char* path, int oflag, ...)
     creates a file descriptor for the file at path. oflag specifies permissions:
     O_RDONLY: Open for Reading Only
     O_WRONLY: Open for Writing Only
     O_RDWR  : Open for Reading and Writing 
   documentation: http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
 ~ system(string command)
     executes a command using the command processor
     * used for modprobe
 ~ ioctl(int fd, unsigned long request, char *argp)
     interfaces with the device specified in a character device
     fd == file descriptor
     request == device-dependent request code
     argp == pointer to memory to be used for transaction
   documentation: http://man7.org/linux/man-pages/man2/ioctl.2.html
